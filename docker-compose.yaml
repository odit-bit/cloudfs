services:
  minio1:
    image: minio/minio:latest
    hostname: minio1
    expose:
      - "9000"
      - "9090"
      # ports:
      # - "9000:9000" #server
      # - "9090:9090" #admin
    environment:
      - MINIO_ROOT_USER=access-key
      - MINIO_ROOT_PASSWORD=secret-access-key
      - MINIO_VOLUMES=/mnt/data
      # - MINIO_CONFIG_ENV_FILE=/etc/config.env
    volumes:
      # - ./minio_config.env:/etc/config.env # attach minio config file
      - blob_data:/mnt/data # attach docker volumeNamed 
      - blob_data:/data
    command: server --console-address ":9090"

  pg:
    image: postgres:alpine
    hostname: pg
    expose:
      - "5432"
    # ports:
    #   - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d postgres" ]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=postgres
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - user_data:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    hostname: redis
    expose:
      - "6379" #default redis port
    ports:
      - "6379:6379"
    environment:
      - name=value

  caddy:
    image: caddy:alpine
    hostname: caddy
    # restart: unless-stopped
    depends_on:
      - web
    cap_add:
      - NET_ADMIN
    ports:
      - "2080:2080"
      - "443:443"
      - "443:443/udp"

    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config

  web:
    build:
      context: .
      dockerfile: Dockerfile
    hostname: web
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 1s
        max_attempts: 3
        window: 60s
    depends_on:
      pg:
        condition: service_healthy
        restart: true
      minio1:
        condition: service_started
      redis:
        condition: service_started
    restart: on-failure
    command: -production
    expose:
      - "8181"
    # ports:
    #   - "8282:8181"
    # volumes:
    #   - token_data:/token
    environment:
      - BLOB_MINIO_ENDPOINT=minio1:9000
      - BLOB_MINIO_ACCESS_KEY=access-key
      - BLOB_MINIO_SECRET_ACCESS_KEY=secret-access-key

      - USER_PG_URI=postgres://admin:admin@pg:5432/postgres
      - TOKEN_REDIS_URI=redis://:@redis:6379/0
      - SESSION_REDIS_URI=redis://:@redis:6379/0

volumes:
  blob_data:
  token_data:
  user_data:
  caddy_data:
  caddy_config:


