services:
  minio1:
    image: minio/minio:latest
    hostname: minio1
    expose:
      - "9000"
      - "9090"
    ports:
      - "9000:9000" #server
      - "9090:9090" #admin
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=admin12345
      - MINIO_VOLUMES=/mnt/data
      # - MINIO_CONFIG_ENV_FILE=/etc/config.env
    volumes:
      # - ./minio_config.env:/etc/config.env # attach minio config file
      - blob_data:/mnt/data # attach docker volumeNamed 
      - blob_data:/data
    command: server --console-address ":9090"

  postgres:
    image: postgres:alpine
    hostname: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=postgres
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - user_data:/var/lib/postgresql/data

  caddy:
    image: caddy:alpine
    hostname: caddy
    # restart: unless-stopped
    depends_on:
      - web
    cap_add:
      - NET_ADMIN
    ports:
      - "2080:2080"
      - "443:443"
      - "443:443/udp"

    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config

  web:
    build:
      context: .
      dockerfile: Dockerfile
    # image: oditbit/cloudfs-web
    depends_on:
      - minio1
      - postgres
    hostname: cloudfs-web
    restart: on-failure
    # ports:
    #   - "8282:8181"
    environment:
      - USER_DB_ENDPOINT=postgres://admin:admin@postgres:5432/postgres
      - BLOB_STORAGE_ENDPOINT=minio1:9000
      - BLOB_STORAGE_USER=admin
      - BLOB_STORAGE_PASSWORD=admin12345

volumes:
  blob_data:
  user_data:
  caddy_data:
  caddy_config:


