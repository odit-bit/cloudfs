package component

import (
	"fmt"
	"github.com/dustin/go-humanize"
	"github.com/odit-bit/cloudfs/internal/blob"
)

// templ List() {
// 	<body>
// 		<style>

// 		table {
// 			text-align: center;
// 			border-collapse: collapse;
// 			width: 100%;
// 			margin: 0 auto;
// 		}

// 		th, td {
// 			padding: 12px;
// 			text-align: left;
// 			border-bottom: 1px solid #DDD;
// 		}

// 		th {
// 			background-color: #f2f2f2;
// 			font-weight: bold;
// 			text-transform: uppercase;
// 		}

// 		tr:hover {
// 			background-color: #D6EEEE;
// 		}

// 		tr:nth-child(even) {
// 			background-color: #f2f2f2;
// 		}

// 		a {
// 			text-decoration: none;
// 			color: #0066cc;
// 		}

// 		a:hover {
// 			text-decoration: underline;
// 		}

// 	</style>
// 		<div>
// 			//TODO: make sticky
// 			@Upload("/api/upload")
// 		</div>
// 		<div>
// 			<table>
// 				<div hx-get="/list/data"></div>
// 			</table>
// 		</div>
// 	</body>
// }

type ListAttribute struct {
	Objects []*blob.ObjectInfo

	//download
	DownloadAPI string
	DeleteAPI   string
	//list object
	ListView string
}

func (la *ListAttribute) LastObject() (bool, *blob.ObjectInfo) {
	if len(la.Objects) > 0 {
		return true, la.Objects[len(la.Objects)-1]
	}
	return false, nil
}

func (la *ListAttribute) Length() int {
	return len(la.Objects)
}

func (la *ListAttribute) DownloadURL(filename string) string {
	return fmt.Sprintf("%s?filename=%s", la.DownloadAPI, filename)
}
func (la *ListAttribute) DeleteURL(filename string) string {
	return fmt.Sprintf("%s?filename=%s", la.DeleteAPI, filename)
}

func (la *ListAttribute) NextListView() string {
	length := la.Length()
	if length > 0 {
		return fmt.Sprintf("%s?last=%s", la.ListView, la.Objects[la.Length()-1].Filename)
	}
	return ""

}

templ ListData(attr *ListAttribute) {
	if attr.Length() != 0 {
		for _, obj := range attr.Objects {
			<tr id={ obj.Sum }>
				<td>{ obj.Filename }</td>
				<td>{ humanize.Bytes(uint64(obj.Size)) }</td>
				<td>{ humanize.Time(obj.LastModified) }</td>
				<td><a href={ templ.URL(attr.DownloadURL(obj.Filename)) } download={ obj.Filename }>Download</a></td>
				<td><button class="btn danger" hx-delete={ attr.DeleteURL(obj.Filename) }>Delete</button></td>
			</tr>
		}
	}
}
